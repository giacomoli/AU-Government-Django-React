# Generated by Django 2.0 on 2018-07-17 15:34

import sitename.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('billing', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalInvoice',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_date', models.DateField(null=True)),
                ('billing_method', models.IntegerField(choices=[(1, 'Fixed price'), (2, 'Time Entry')])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('matter', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='billing.Matter')),
            ],
            options={
                'verbose_name': 'historical invoice',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPayment',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.IntegerField(choices=[(1, 'EFT'), (2, 'BPAY'), (3, 'Credit Card'), (4, 'Cheque'), (5, 'Trust Account'), (6, 'Trust Clearing Account'), (7, 'Cash')], null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical payment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(null=True)),
                ('billing_method', models.IntegerField(choices=[(1, 'Fixed price'), (2, 'Time Entry')])),
                ('matter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='billing.Matter')),
            ],
            options={
                'ordering': ('-created_date',),
            },
            bases=(models.Model, sitename.mixins.UpdateAttributesMixin),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.IntegerField(choices=[(1, 'EFT'), (2, 'BPAY'), (3, 'Credit Card'), (4, 'Cheque'), (5, 'Trust Account'), (6, 'Trust Clearing Account'), (7, 'Cash')], null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='invoicing.Invoice')),
            ],
            bases=(models.Model, sitename.mixins.UpdateAttributesMixin),
        ),
        migrations.CreateModel(
            name='PaymentTerms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_offset', models.IntegerField(default=14)),
            ],
            options={
                'verbose_name_plural': 'payment terms',
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='payment_terms',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='invoices', to='invoicing.PaymentTerms'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='core.InvoiceStatus'),
        ),
        migrations.AddField(
            model_name='historicalpayment',
            name='invoice',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='invoicing.Invoice'),
        ),
        migrations.AddField(
            model_name='historicalinvoice',
            name='payment_terms',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='invoicing.PaymentTerms'),
        ),
        migrations.AddField(
            model_name='historicalinvoice',
            name='status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.InvoiceStatus'),
        ),
    ]
